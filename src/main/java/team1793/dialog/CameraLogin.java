package team1793.dialog;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import team1793.data.Member;

import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;

import static team1793.HourLogger.members;

/**
 * Created by tyler on 10/9/16.
 */
public class CameraLogin extends JFrame implements Runnable, ThreadFactory {

    private static final long serialVersionUID = 6441489157408381878L;

    private final Executor executor = Executors.newSingleThreadExecutor(this);

    private Webcam webcam = null;
    private JTextArea textarea = null;
    private JPanel rootPanel;
    private WebcamPanel webcamPanel;
    private JTextArea textArea1;

    public CameraLogin() {
        super();
        $$$setupUI$$$();
        setTitle("Read QR / Bar Code With Webcam");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setContentPane(rootPanel);
        pack();
        setVisible(true);
    }

    @Override
    public void run() {

        //noinspection InfiniteLoopStatement
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image;

            if (webcam.isOpen()) {

                if ((image = webcam.getImage()) == null) {
                    continue;
                }

                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                try {
                    result = new MultiFormatReader().decode(bitmap);
                } catch (NotFoundException e) {
                    // fall thru, it means there is no QR code in image
                }
            }

            if (result != null) {
                textarea.setText(result.getText());
                String[] names = result.getText().split(" ");
                Member member = members.getMemberFromName(names[0], names[1]);
                if (member != null) {
                    member.loginlogout();
                }
            }

        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "example-runner");
        t.setDaemon(true);
        return t;
    }

    private void createUIComponents() {
        Dimension size = WebcamResolution.QVGA.getSize();
        for (int i = Webcam.getWebcams().size() - 1; i > 0; i--)
            webcam = Webcam.getWebcams().get(i);
        if (webcam == null)
            webcam = Webcam.getDefault();
        webcam.setViewSize(size);

        webcamPanel = new WebcamPanel(webcam);

        webcamPanel.setPreferredSize(size);
        webcamPanel.setBackground(new Color(-12828863));

        textarea = new JTextArea();
        textarea.setEditable(false);
        textarea.setPreferredSize(size);
        textarea.setBackground(new Color(-12828863));
        textarea.setForeground(new Color(0xFFFFFF));
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent windowEvent) {
                webcam.close();
            }
        });
        executor.execute(this);

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        webcamPanel.setDisplayDebugInfo(false);
        rootPanel.add(webcamPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(400, 400), null, null, 0, false));
        textArea1 = new JTextArea();
        rootPanel.add(textArea1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}